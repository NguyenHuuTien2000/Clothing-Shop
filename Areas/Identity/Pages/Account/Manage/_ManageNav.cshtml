@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link text-black @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link text-black @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link text-black @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    <li class="nav-item"><a class="nav-link text-black" asp-action="OrderList" asp-controller="Home" >Current orders</a></li>
    <li class="nav-item"><a class="nav-link text-black" asp-action="HistoryPage" asp-controller="Home" >Purchases history</a></li>
    @if (User.IsInRole("Moderator") || User.IsInRole("Admin"))
    {
        <li class="nav-item"><a class="nav-link text-black" asp-action="SaleReport" asp-controller="Home" >Sale report</a></li>
    }
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
</ul>
