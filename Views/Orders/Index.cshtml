@model PaginatedList<Order>

@{
    ViewData["Title"] = "Orders List";
    bool haveItem = Model.Count() >= 1;
}

@if (haveItem)
{
    <h1>Current Orders</h1>
    <div class="row mb-2">
        <div class="col-2 pe-0">
            Total sort <button class="btn btn-outline-warning dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                @ViewData["TotalSort"]
            </button>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item"
                        asp-action="Index"
                        asp-route-sortOrder="price_asc">Ascending</a>
                </li>
                <li>
                    <a class="dropdown-item"
                        asp-action="Index"
                        asp-route-sortOrder="price_desc">Descending</a>
                </li>
            </ul>
        </div>
        <div class="col-2 pe-0">
            Date sort <button class="btn btn-outline-warning dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                @ViewData["DateSort"]
            </button>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item"
                        asp-action="Index"
                        asp-route-day="date_asc">Ascending</a>
                </li>
                <li>
                    <a class="dropdown-item"
                        asp-action="Index"
                        asp-route-day="date_desc">Descending</a>
                </li>
            </ul>
        </div>
        <div class="col-3 pe-0">
            Quantity sort <button class="btn btn-outline-warning dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                @ViewData["QuantitySort"]
            </button>
            <ul class="dropdown-menu">
                <li>
                    <a class="dropdown-item"
                        asp-action="Index"
                        asp-route-quantity="q_asc">Ascending</a>
                </li>
                <li>
                    <a class="dropdown-item"
                        asp-action="Index"
                        asp-route-quantity="q_desc">Descending</a>
                </li>
            </ul>
        </div>
    </div>
    <table class="table table-bordered table-striped align-middle cart-table">
        <thead class="table-dark">
            <tr>
                <th>
                    ID
                </th>
                <th>
                    User
                </th>
                <th>
                    Status
                </th>
                <th>
                    Order Date
                </th>
                <th>
                    Number of Items
                </th>
                <th>
                    Total
                </th>
                <th>
                    Payment
                </th>
                <th>
                    Delivery Address
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
        ApplicationUser user = UserManager.Users.First(u => u.Id == item.UserID);
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @user.Fullname
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                    @if (item.Status == "Pending")
                    {
                        <a class="btn btn-outline-success" asp-action="ApproveOrder" asp-route-oid="@item.Id">Complete</a>
                    }
                </td>
                <td>
                    @item.CreatedDate.ToString("dd/MM/yyyy")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemNum)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DisplayTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentMethod)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeliveryAddress)
                </td>
                <td>
                    <a class="btn btn-outline-dark" asp-route-oid="@item.Id" asp-controller="Home" asp-action="OrderDetail">Detail</a>
                </td>
            </tr>
    }
        </tbody>
    </table>
    
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    
    <div class="text-center">
        <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrTotal"]"
       asp-route-day="@ViewData["CurrDate"]"
       asp-route-quantity="@ViewData["CurrQuantity"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-default @prevDisabled">
        <i class="fa fa-angle-left fa-2x"></i>
    </a>
    <span class="bg-info text-white p-2 text-center">
        @Model.PageIndex
    </span>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrTotal"]"
       asp-route-day="@ViewData["CurrDate"]"
       asp-route-quantity="@ViewData["CurrQuantity"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-default @nextDisabled">
        <i class="fa fa-angle-right fa-2x"></i>
    </a>
    </div>
    
}
else {
    <div id="cart-empty" class="bg-black mt-3">
        <h1 class="text-white mb-5">No current Orders</h1>
        <a class="btn btn-secondary btn-lg" asp-action="Index">Go back to the Main Page</a>
    </div>
}


